{
  "openapi": "3.1.0",
  "info": {
    "title": "Vignette ID Partner API",
    "description": "Documentation describes the possibilities of connecting to the platform **Vignette ID** for the possibility of paying for the motorway in 8 European countries.",
    "contact": {
      "name": "API Support",
      "email": "work+api+support@vignette.id"
    },
    "version": "1.0.0"
  },
  "security": [
    {
      "basic-auth": []
    },
    {
      "x-rh-identity": []
    },
    {
      "x-rh-sources-org-id": []
    },
    {
      "x-rh-sources-account-number": []
    }
  ],
  "tags": [
    {
      "name": "Products List Endpoints",
      "description": "Endpoints for interacting with products. "
    },
    {
      "name": "Users List Endpoints",
      "description": "Endpoints for interacting with Users."
    },
    {
      "name": "Orders List Endpoints",
      "description": "Endpoints for interacting with orders."
    },
    {
      "name": "Extended List Endpoints",
      "description": "Extended endpoints."
    }
  ],
  "components": {
    "securitySchemes": {
      "basic-auth": {
        "description": "Basic authentication. Required for the \"stage\" and \"production\" environments",
        "scheme": "basic",
        "type": "http"
      },
      "x-rh-identity": {
        "description": "Base64 encoded XRHID header's value",
        "in": "header",
        "name": "x-rh-identity",
        "type": "apiKey"
      },
      "x-rh-sources-account-number": {
        "description": "EBS account number to identify the tenant. Warning: it's being deprecated",
        "in": "header",
        "name": "x-rh-sources-account-number",
        "type": "apiKey"
      },
      "x-rh-sources-org-id": {
        "description": "OrgId value to identify the tenant",
        "in": "header",
        "name": "x-rh-sources-org-id",
        "type": "apiKey"
      }
    },
    "parameters": {
      "UserId": {
        "name": "id",
        "in": "path",
        "description": "ID of user",
        "required": true,
        "schema": {
          "example": "6jgjhqqk58",
          "type": "string"
        }
      },
      "OrderIdOrCustomId": {
        "name": "id",
        "in": "path",
        "description": "`id` of order in Vignette ID system or `custom_id` from Partner system",
        "required": true,
        "schema": {
          "example": "x2urgt1kt2",
          "type": "string"
        }
      },
      "pagination": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "example": 5,
          "type": "number"
        }
      },
      "currency": {
        "name": "currency",
        "in": "query",
        "description": "Return price of products in selected currency with the included individual commission for the partner. \n Supported currencies `EUR`, `UAH`, `USD`, `PLN`, `HUF` and more ",
        "required": false,
        "schema": {
          "example": "UAH",
          "default": "EUR",
          "type": "string"
        }
      },
      "BugReport": {
        "name": "bug_report",
        "in": "query",
        "description": "Use with all endpoints to inform us for bugs in API ",
        "required": false,
        "schema": {
          "example": "true",
          "default": "false",
          "type": "boolean"
        }
      }
    },
    "schemas": {
      "AllProductsObject": {
        "type": "object",
        "properties": {
          "error": {
            "type": "null"
          },
          "result": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "icon": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "priority": {
                "type": "number"
              },
              "price": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                }
              },
              "restrictions": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "examples": [
          {
            "error": null,
            "result": [
              {
                "name": "ro-vignette-2a",
                "title": "Vignette 2A",
                "icon": "https://vignette.id/img/cars/car.svg",
                "color": "blue",
                "country": "ro",
                "priority": 1,
                "price": {
                  "7": {
                    "total_price": 6,
                    "government_price": 3,
                    "partner_fee": 3,
                    "currency": "EUR"
                  }
                },
                "restrictions": {
                  "height": "< 1.3 m",
                  "weight": "≤ 3.5 T"
                }
              },
              {
                "name": "cz-vignette",
                "title": "Vignette 2A",
                "icon": "https://vignette.id/img/cars/car.svg",
                "color": "blue",
                "country": "cz",
                "priority": 1,
                "price": {
                  "10": {
                    "total_price": 16,
                    "government_price": 13,
                    "partner_fee": 3,
                    "currency": "EUR"
                  },
                  "30": {
                    "total_price": 21.9,
                    "government_price": 18.9,
                    "partner_fee": 3,
                    "currency": "EUR"
                  },
                  "365": {
                    "total_price": 66.5,
                    "government_price": 63.5,
                    "partner_fee": 3,
                    "currency": "EUR"
                  }
                },
                "restrictions": {
                  "height": "—",
                  "weight": "≤ 3.5 T"
                }
              }
            ]
          }
        ]
      },
      "AllUsersObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_date": {
            "type": "number"
          }
        },
        "examples": [
          {
            "error": null,
            "pages": {
              "total": 1,
              "current": 1
            },
            "result": [
              {
                "id": "6jgjhqqk58",
                "email": "techny@gmail.com",
                "created_date": 1685725115
              },
              {
                "id": "cxarnt70jt",
                "email": "test@example.com",
                "created_date": 1685725115
              },
              {
                "id": "l1arxs73st",
                "email": "info@intaxi.si",
                "created_date": 1685725115
              }
            ]
          }
        ]
      },
      "UserNotFoundError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "user_not_found"
              },
              "message": {
                "type": "string",
                "example": "User does not exists"
              }
            }
          }
        }
      },
      "AllUserOrdersObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        },
        "examples": [
          {
            "error": null,
            "pages": {
              "total": 1,
              "current": 1
            },
            "result": [
              {
                "id": "x2urgt1kt2",
                "custom_id": "4911612692792",
                "user_id": "947awo1z4c",
                "cars": [
                  {
                    "plate": "AA4544AA",
                    "country": "ua",
                    "provider_id": "213308221128414692867",
                    "pdf": "https://vignette.id/invoices/pdf/55729_awz4c1bawh_ext.pdf"
                  },
                  {
                    "plate": "BA4544XX",
                    "country": "ua",
                    "provider_id": "213308221928414692867",
                    "pdf": "https://vignette.id/invoices/pdf/55729_awz4c1bawh_ext.pdf"
                  }
                ],
                "purchase_date": 1692692847,
                "start_from": "WILL BE DEPRECATED. Use start_date",
                "start_date": 1692655200,
                "end_date": 1693519199,
                "period": "10",
                "type": "vignette",
                "country": "hu",
                "status": "ACTIVE",
                "receipt": "https://vignette.id/invoices/pdf/55729_awz4c1bawh.pdf"
              },
              {
                "id": "m3lkr23ypd",
                "custom_id": "4902692691867",
                "user_id": "111awo2z1c",
                "cars": [
                  {
                    "plate": "C022KRU",
                    "country": "ro",
                    "provider_id": "T4LXSNL",
                    "pdf": "https://vignette.id/invoices/pdf/55725_byc2x8jyhn_ext.pdf"
                  }
                ],
                "purchase_date": 1692691932,
                "start_from": "WILL BE DEPRECATED. Use start_date",
                "start_date": 1692655200,
                "end_date": 1693519199,
                "period": "10",
                "type": "vignette",
                "country": "cz",
                "status": "ACTIVE",
                "receipt": "https://vignette.id/invoices/pdf/55725_2gkkz18cn75.pdf"
              }
            ]
          }
        ]
      },
      "OrderResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1k99i2ddy6"
          },
          "custom_id": {
            "type": "string",
            "example": "partner-000001"
          },
          "currency": {
            "type": "string",
            "example": "UAH"
          },
          "profit": {
            "type": "number",
            "example": 2.55
          }
        }
      },
      "ResponseOrderObject": {
        "type": "object",
        "properties": {
          "error": {
            "type": "null"
          },
          "result": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "string",
                "example": "j28ho77yuh"
              },
              "orders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderResult"
                }
              }
            }
          }
        },
        "example": {
          "error": null,
          "result": {
            "user_id": "j28ho77yuh",
            "orders": [
              {
                "id": "1k99i2ddy6",
                "custom_id": "partner-000001",
                "currency": "EUR",
                "profit": 2.55
              }
            ]
          }
        }
      },
      "ValidatePlateObject": {
        "type": "object",
        "title": "Validate vehicle plate Schema",
        "required": [
          "cars"
        ],
        "additionalProperties": false,
        "properties": {
          "cars": {
            "type": "array",
            "description": "Array of cars with car plate and registration country.",
            "items": {
              "type": "object",
              "required": [
                "plate",
                "country"
              ],
              "properties": {
                "plate": {
                  "type": "string",
                  "description": "Carplate number (vehicle plate)\n\n **Important!** \n Only numbers and Latin characters \n\n **Exception** \n `German` and `Austrian` license plates where the car number \n must contain **one dash** `-` sign. \n\n [More about car plate templates](/docs/routes/patterns)",
                  "example": "AA4544AA"
                },
                "country": {
                  "type": "string",
                  "description": "Car registration country code. Use **two lowercase**(!) letter code format like `at`, `cz`, `pl`, `ua`... \n\n [More about country codes. IMPORTANT to read](/docs/routes/countries)",
                  "example": "ua"
                }
              }
            }
          }
        },
        "examples": [
          {
            "cars": [
              {
                "plate": "AA4544AA",
                "country": "ua"
              }
            ]
          }
        ]
      },
      "ResponseValidatePlateObject": {
        "type": "object",
        "properties": {
          "error": {
            "type": "null"
          },
          "result": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Vehicle plate is valid"
              }
            }
          }
        },
        "example": {
          "error": null,
          "result": {
            "message": "Vehicle plate is valid"
          }
        }
      },
      "InsertOrderObject": {
        "type": "object",
        "title": "Order Insert Schema",
        "required": [
          "terms_and_privacy_accepted",
          "order_has_been_paid",
          "email",
          "cars",
          "products"
        ],
        "additionalProperties": false,
        "properties": {
          "terms_and_privacy_accepted": {
            "type": "boolean",
            "description": "Must be `true` to indicate that terms and privacy are accepted.",
            "enum": [
              "true"
            ],
            "examples": [
              true
            ]
          },
          "order_has_been_paid": {
            "type": "boolean",
            "description": "Must be `true` to indicate that the order has been paid.",
            "enum": [
              "true"
            ],
            "examples": [
              true
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email for sending receipts or contacting in case of data errors.",
            "examples": [
              "user@gmail.com"
            ]
          },
          "cars": {
            "type": "array",
            "description": "Array of cars with car plate and registration country.",
            "items": {
              "type": "object",
              "required": [
                "plate",
                "country"
              ],
              "properties": {
                "plate": {
                  "type": "string",
                  "description": "Carplate number (vehicle plate)\n\n **Important!** \n Only numbers and Latin characters \n\n **Exception** \n `German` and `Austrian` license plates where the car number \n must contain **one dash** `-` sign. \n\n [More about car plate templates](/docs/routes/patterns)",
                  "example": "AA4544AA"
                },
                "country": {
                  "type": "string",
                  "description": "Car registration country code. Use **two lowercase**(!) letter code format like `at`, `cz`, `pl`, `ua`... \n\n [More about country codes. IMPORTANT to read](/docs/routes/countries)",
                  "example": "ua"
                }
              }
            }
          },
          "products": {
            "type": "array",
            "description": "Array of vignettes with custom id, name, period, and start date.",
            "items": {
              "type": "object",
              "required": [
                "name",
                "start_date",
                "period"
              ],
              "properties": {
                "custom_id": {
                  "type": "string",
                  "description": "Order id in Partner system",
                  "example": "partnername-000001"
                },
                "name": {
                  "type": "string",
                  "description": "Country of vignette. \n\n To check options - use endpoint `/public/products -> name`",
                  "example": "vignette-hu-2a"
                },
                "start_from": {
                  "type": "integer",
                  "format": "int64",
                  "description": " **Important!** WILL BE DEPRECATED. Use `start_date`",
                  "example": 1690711200
                },
                "start_date": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Start date of vignette in `UNIX` time in **Europe/Berlin Timezone**",
                  "example": 1690711200
                },
                "period": {
                  "type": ["integer", "string"],
                  "description": "Period of vignette. Available periods depend on the country. \n Possible options `7`, `10`, `30`, `60`, `90`, `180`, `365` days. \n\n For tunnels you can use `1j`, `2j` and `365`, where `j` mean **journey** \n\n To check options - use endpoint `/public/products -> price` \n\n [More about country periods](/docs/routes/vignette-covered-countries)",
                  "example": 30
                }
              }
            }
          },
          "interchange_fee": {
            "type": "object",
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "number",
                "description": "Gateway fee",
                "examples": [
                  100,
                  3.14
                ]
              },
              "currency": {
                "type": "string",
                "description": "The fee currency. Available in `EUR`, `UAH`, `PLN`.",
                "examples": [
                  "UAH",
                  "EUR"
                ]
              }
            }
          }
        },
        "examples": [
          {
            "terms_and_privacy_accepted": true,
            "order_has_been_paid": true,
            "email": "user@example.com",
            "cars": [
              {
                "plate": "AA4544AA",
                "country": "ua"
              }
            ],
            "products": [
              {
                "custom_id": "partnername-000001",
                "name": "vignette-si-2a",
                "start_from": "WILL BE DEPRECATED. Use start_date",
                "start_date": 1690711200,
                "period": 30
              }
            ],
            "interchange_fee": {
              "amount": 0.33,
              "currency": "EUR"
            }
          }
        ]
      },
      "OrderObject": {
        "type": "object",
        "properties": {
          "error": {
            "type": "null"
          },
          "result": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "custom_id": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              },
              "cars": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "plate": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string",
                      "description": "Car registration country code. Use two letter code format like `at`, `cz`, `pl`, `ua`... \n\n [More about country codes](/docs/routes/countries)",
                      "example": "J7MH26M"
                    },
                    "pdf": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "plate",
                    "country"
                  ]
                }
              },
              "purchase_date": {
                "type": "integer"
              },
              "start_date": {
                "type": "integer"
              },
              "end_date": {
                "type": "integer"
              },
              "period": {
                "type": ["integer", "string"]
              },
              "type": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "receipt": {
                "type": "string"
              }
            }
          }
        },
        "examples": [
          {
            "error": null,
            "pages": {
              "total": 1,
              "current": 1
            },
            "result": [
              {
                "id": "m3lkr23ypd",
                "custom_id": "4902692691867",
                "user_id": "111awo2z1c",
                "cars": [
                  {
                    "plate": "C022KRU",
                    "country": "ro",
                    "provider_id": "T4LXSNL",
                    "pdf": "https://vignette.id/invoices/pdf/55725_byc2x8jyhn_ext.pdf"
                  }
                ],
                "purchase_date": 1692691932,
                "start_from": "WILL BE DEPRECATED. Use start_date",
                "start_date": 1692655200,
                "end_date": 1693519199,
                "period": "10",
                "type": "vignette",
                "country": "cz",
                "status": "ACTIVE",
                "receipt": "https://vignette.id/invoices/pdf/55725_2gkkz18cn75.pdf"
              }
            ]
          }
        ]
      },
      "AllOrdersObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_date": {
            "type": "number"
          }
        },
        "examples": [
          {
            "error": null,
            "pages": {
              "total": 1,
              "current": 1
            },
            "result": [
              {
                "id": "x2urgt1kt2",
                "custom_id": "4911612692792",
                "user_id": "947awo1z4c",
                "cars": [
                  {
                    "plate": "AA4544AA",
                    "country": "ua",
                    "provider_id": "213308221128414692867",
                    "pdf": "https://vignette.id/invoices/pdf/55729_awz4c1bawh_ext.pdf"
                  },
                  {
                    "plate": "BA4544XX",
                    "country": "ua",
                    "provider_id": "213308221928414692867",
                    "pdf": "https://vignette.id/invoices/pdf/55729_awz4c1bawh_ext.pdf"
                  }
                ],
                "purchase_date": 1692692847,
                "start_from": "WILL BE DEPRECATED. Use start_date",
                "start_date": 1692655200,
                "end_date": 1693519199,
                "period": "10",
                "type": "vignette",
                "country": "hu",
                "status": "ACTIVE",
                "receipt": "https://vignette.id/invoices/pdf/55729_awz4c1bawh.pdf"
              },
              {
                "id": "m3lkr23ypd",
                "custom_id": "4902692691867",
                "user_id": "111awo2z1c",
                "cars": [
                  {
                    "plate": "C022KRU",
                    "country": "ro",
                    "provider_id": "T4LXSNL",
                    "pdf": "https://vignette.id/invoices/pdf/55725_byc2x8jyhn_ext.pdf"
                  }
                ],
                "purchase_date": 1692691932,
                "start_from": "WILL BE DEPRECATED. Use start_date",
                "start_date": 1692655200,
                "end_date": 1693519199,
                "period": "10",
                "type": "vignette",
                "country": "cz",
                "status": "ACTIVE",
                "receipt": "https://vignette.id/invoices/pdf/55725_2gkkz18cn75.pdf"
              }
            ]
          }
        ]
      },
      "SchemaValidationError": {
        "type": "object",
        "required": [
          "type",
          "title",
          "status",
          "detail",
          "instance"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "trace": {
            "type": "object"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          }
        },
        "examples": [
          {
            "type": "https://httpproblems.com/http-status/400",
            "title": "Bad Request",
            "status": 400,
            "detail": "Incoming body did not pass schema validation",
            "instance": "/v1/todos",
            "trace": {
              "timestamp": "2023-02-27T18:53:05.997Z",
              "requestId": "b1e1c2a9-da7b-436c-aa89-2f78918047b2",
              "buildId": "83e3d0f1-89a8-46ea-b040-e0a2432f2ea5",
              "rayId": "7a031f102747944d-SJC"
            },
            "errors": [
              "Body must have required property 'userId'"
            ]
          }
        ]
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "https://httpproblems.com/http-status/404"
          },
          "title": {
            "type": "string",
            "example": "Not Found"
          },
          "status": {
            "type": "integer",
            "example": 404
          },
          "instance": {
            "type": "string",
            "example": "/public/user/j28ho77yuh/orders"
          },
          "trace": {
            "type": "object",
            "properties": {
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "example": "2023-07-03T20:37:37.958Z"
              },
              "requestId": {
                "type": "string",
                "example": "2e86c561-67d4-4830-891e-e0cf9e591912"
              },
              "buildId": {
                "type": "string",
                "example": "1dc83389-dacc-4868-92e9-1f684c59e229"
              },
              "rayId": {
                "type": "string",
                "example": "7e11ed6fc5ae0bdb-AMS"
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/public/products": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "get": {
        "summary": "Products (vignettes and tunnels)",
        "description": "All available products (vignettes, tunnels, trains, ferries) for customers in 8 European countries",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "${env.BASE_URL}"
            }
          },
          "policies": {
            "inbound": [
              "partner-api-key",
              "partner-policy-key"
            ]
          }
        },
        "operationId": "e944b9b8-83e3-4d61-8b88-d5c6fe386102",
        "tags": [
          "Products List Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/currency"
          }
        ],
        "responses": {
          "200": {
            "description": "Produscts description test",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllProductsObject"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/public/users": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "get": {
        "summary": "Users",
        "description": "Returns an array of partner users who made at least 1 payment.",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "${env.BASE_URL}"
            }
          },
          "policies": {
            "inbound": [
              "partner-api-key",
              "partner-policy-key"
            ],
            "outbound": []
          }
        },
        "operationId": "8f60c186-5b98-4f6c-bb82-4fa2cf727128",
        "tags": [
          "Users List Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Users description test",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllUsersObject"
                }
              }
            }
          }
        }
      }
    },
    "/public/users/:id/orders": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "get": {
        "summary": "User Orders",
        "description": "An array of all vignettes for a specific user. \n\n **• Statuses** \n\n Each vignette can have one of the statuses: \n `ACTIVE`, `EXPIRED`, `PENDING`, `REFUNDED`, `DELETED` \n\n `ACTIVE` - This status indicates that the vignette is currently in use. It's active and functioning as expected. \n\n `EXPIRED` - This status signifies that the vignette is no longer active or valid. This could be due to a time limit that has been exceeded or a condition that is no longer met. \n\n `PENDING` - This status means that the vignette is awaiting further action or approval. It's **not yet active**, but it's in a queue or waiting list for processing.\n\n `REFUNDED` - This status indicates that payment for the vignette is due. The vignette might not be active or accessible until the payment is made.\n\n `DELETED` - This status indicates that...  \n\n **• Unique vignette id** \n\n `provider_id` is a string represented unique vignette id in national providers system in diferent formats",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlRewriteHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "rewritePattern": "${env.BASE_URL}/public/users/${params.id}/orders"
            }
          },
          "policies": {
            "inbound": [
              "partner-api-key",
              "partner-policy-key"
            ]
          }
        },
        "operationId": "af8c28f2-da4f-41ae-9303-37104d89a5b5",
        "tags": [
          "Users List Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Users - orders description test",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllUserOrdersObject"
                }
              }
            }
          },
          "401": {
            "description": "Your request could not be processed",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserNotFoundError"
                    },
                    {
                      "$ref": "#/components/schemas/UserNotFoundError"
                    },
                    {
                      "$ref": "#/components/schemas/UserNotFoundError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/public/orders": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "post": {
        "summary": "Create order",
        "description": "New **paid** order on partner side initiate request for processing in Vignette ID system.",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "${env.BASE_URL}"
            }
          },
          "policies": {
            "inbound": [
              "insert-order-policy",
              "partner-api-key",
              "partner-policy-key"
            ]
          }
        },
        "operationId": "a5e610d2-d515-4f71-b8f3-e2a539405bd9",
        "tags": [
          "Orders List Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/BugReport"
          }
        ],
        "requestBody": {
          "description": "Payload required to create a new order.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertOrderObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOrderObject"
                }
              }
            }
          },
          "400": {
            "description": "Schema validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "examples": [
                      {
                        "error": {
                          "type": "auth_test",
                          "message": "The order would be created in production"
                        }
                      },
                      {
                        "error": {
                          "type": "pending_orders",
                          "message": "You already have orders that are being processed"
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_custom_id",
                          "message": "Custom id already exists",
                          "index": 0
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_payment_fee",
                          "message": "Invalid payment_fee"
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_start_date",
                          "message": "Invalid product data",
                          "index": 0
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_period",
                          "message": "Invalid product data",
                          "index": 0
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Orders",
        "description": "This endpoint allows you to obtain a list of all partner orders with all the necessary information about the order",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "${env.BASE_URL}"
            }
          },
          "policies": {
            "inbound": [
              "partner-api-key",
              "partner-policy-key"
            ]
          }
        },
        "operationId": "39e18539-dc87-406b-8ece-bcd6b0367512",
        "tags": [
          "Orders List Endpoints"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllOrdersObject"
                }
              }
            }
          },
          "400": {
            "description": "Schema validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "examples": [
                      {
                        "error": {
                          "type": "auth_test",
                          "message": "The order would be created in production"
                        }
                      },
                      {
                        "error": {
                          "type": "pending_orders",
                          "message": "You already have orders that are being processed"
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_custom_id",
                          "message": "Custom id already exists",
                          "index": 0
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_payment_fee",
                          "message": "Invalid payment_fee"
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_start_date",
                          "message": "Invalid product data",
                          "index": 0
                        }
                      },
                      {
                        "error": {
                          "type": "invalid_period",
                          "message": "Invalid product data",
                          "index": 0
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/public/orders/:id": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "get": {
        "summary": "Get Order",
        "description": " • `id` - order id in Vignette ID system \n\n • `custom_id` - order id in Partner system\n\n • `provider_id` - unique vignette id in national (government) providers systems \n\n",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "${env.BASE_URL}"
            }
          },
          "policies": {
            "inbound": [
              "partner-api-key",
              "partner-policy-key"
            ]
          }
        },
        "operationId": "4400136d-c3df-42e2-8fb9-f766ee4f51e4",
        "tags": [
          "Orders List Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/OrderIdOrCustomId"
          },
          {
            "$ref": "#/components/parameters/BugReport"
          }
        ],
        "responses": {
          "200": {
            "description": "Specific order description test",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderObject"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/public/orders/:id/cancel": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "post": {
        "summary": "Cancel Pending Order",
        "description": "The ability to cancel an order that has a pending status if it is not processed within the specified time period\n\n • `PENDING` - only ",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "${env.BASE_URL}"
            }
          },
          "policies": {
            "inbound": [
              "partner-api-key",
              "partner-policy-key"
            ]
          }
        },
        "operationId": "4a803090-9826-469c-9127-2dc09aca52c6",
        "tags": [
          "Orders List Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/OrderIdOrCustomId"
          },
          {
            "$ref": "#/components/parameters/BugReport"
          }
        ],
        "responses": {
          "200": {
            "description": "Specific order description test",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderObject"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/public/validate-vehicle": {
      "x-zuplo-path": {
        "pathMode": "open-api"
      },
      "post": {
        "summary": "Validate vehicles",
        "description": "Possibility to check the car number according to the selected country. \n\n [A list of acceptable car registration countries codes](/docs/routes/countries) in two letter format like `at`, `cz`, `pl`, `ua`... ",
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "urlForwardHandler",
            "module": "$import(@zuplo/runtime)",
            "options": {
              "baseUrl": "${env.BASE_URL}"
            }
          },
          "policies": {
            "inbound": [
              "validate-json-schema-inbound",
              "partner-api-key",
              "partner-policy-key"
            ]
          }
        },
        "operationId": "a1f9297e-c96d-42c6-8600-b807f55a9572",
        "tags": [
          "Extended List Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/BugReport"
          }
        ],
        "requestBody": {
          "description": "Payload required to validate a car plate.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidatePlateObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseValidatePlateObject"
                }
              }
            }
          },
          "400": {
            "description": "Schema validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "examples": [
                      {
                        "error": {
                          "type": "invalid_cars",
                          "message": "Invalid car data",
                          "index": 0
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  }
}